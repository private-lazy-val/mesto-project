(()=>{"use strict";var __webpack_modules__={361:()=>{eval('\n;// CONCATENATED MODULE: ./src/components/modals.js\nfunction closeByEsc(evt) {\n  if (evt.key === "Escape") {\n    var openedPopup = document.querySelector(".popup_opened");\n    closePopup(openedPopup);\n  }\n}\nfunction openPopup(popup) {\n  popup.classList.add("popup_opened");\n  document.addEventListener("keydown", closeByEsc);\n}\nfunction closePopup(popup) {\n  popup.classList.remove("popup_opened");\n  document.removeEventListener("keydown", closeByEsc);\n}\n\n// Add event listeners to popup so that it closes when predicate is satisfied\nfunction addPopupEventListeners(popupObj) {\n  var popup = popupObj.popup;\n  var exitButton = popupObj.exitButton;\n  exitButton.addEventListener("click", function () {\n    return closePopup(popup);\n  });\n  popup.addEventListener("click", function (evt) {\n    return evt.target.classList.contains("popup_opened") ? closePopup(popup) : null;\n  });\n}\n\n;// CONCATENATED MODULE: ./src/components/utils.js\n// Add error to input field\nvar showInputError = function showInputError(formElement, inputElement, errorMessage, formObj) {\n  var errorElement = formElement.querySelector(".".concat(inputElement.id, "-error"));\n  inputElement.classList.add(formObj.inputErrorClass);\n  errorElement.classList.add(formObj.activeErrorClass);\n  errorElement.textContent = errorMessage;\n};\n\n// Remove error from input field\nvar hideInputError = function hideInputError(formElement, inputElement, formObj) {\n  var errorElement = formElement.querySelector(".".concat(inputElement.id, "-error"));\n  inputElement.classList.remove(formObj.inputErrorClass);\n  errorElement.classList.remove(formObj.activeErrorClass);\n  errorElement.textContent = "";\n};\n\n// Reset errors in a form\nfunction resetFormErrors(formElement, formObj) {\n  if (formElement) {\n    var inputList = Array.from(formElement.querySelectorAll(".form__input-field"));\n    inputList.forEach(function (inputElement) {\n      hideInputError(formElement, inputElement, formObj);\n    });\n  }\n}\n\n;// CONCATENATED MODULE: ./src/components/validate.js\n\n\n// Ð¡heck whether an array has invalid inputs\nvar hasInvalidInput = function hasInvalidInput(inputList) {\n  return inputList.some(function (inputElement) {\n    return !inputElement.validity.valid;\n  });\n};\n\n// Toggle submit button\nvar toggleButtonState = function toggleButtonState(inputList, buttonElement, formObj) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(formObj.inactiveButtonClass);\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(formObj.inactiveButtonClass);\n  }\n};\n\n// Check validity of the input field\nvar checkInputValidity = function checkInputValidity(formElement, inputElement, formObj) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity("");\n  }\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, formObj);\n  } else {\n    hideInputError(formElement, inputElement, formObj);\n  }\n};\n\n// Set listeners for input fields\nvar setEventListeners = function setEventListeners(formElement, formObj) {\n  var inputList = Array.from(formElement.querySelectorAll(formObj.inputSelector));\n  var buttonElement = formElement.querySelector(formObj.submitButtonSelector);\n  toggleButtonState(inputList, buttonElement, formObj);\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener("input", function () {\n      checkInputValidity(formElement, inputElement, formObj);\n      toggleButtonState(inputList, buttonElement, formObj);\n    });\n  });\n};\n\n// Validate form\nvar enableValidation = function enableValidation(formObj) {\n  var formList = Array.from(document.querySelectorAll(formObj.formSelector));\n  formList.forEach(function (formElement) {\n    formElement.addEventListener("submit", function (evt) {\n      // Save changes without reloading the entire page\n      evt.preventDefault();\n    });\n    setEventListeners(formElement, formObj);\n  });\n};\n\n;// CONCATENATED MODULE: ./src/api.js\nvar config = {\n  baseUrl: "https://nomoreparties.co/v1/plus-cohort-25",\n  headers: {\n    authorization: "fbf2685b-0a91-4bb8-81bb-36697ce1b928",\n    "Content-Type": "application/json"\n  }\n};\nvar onResponse = function onResponse(res) {\n  return res.ok ? res.json() : Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(res.status));\n};\nvar getUser = function getUser() {\n  return fetch("".concat(config.baseUrl, "/users/me"), {\n    headers: config.headers\n  }).then(onResponse).catch(function (err) {\n    return console.log(err);\n  });\n};\nvar getInitialCards = function getInitialCards() {\n  return fetch("".concat(config.baseUrl, "/cards"), {\n    headers: config.headers\n  }).then(onResponse).catch(function (err) {\n    return console.log(err);\n  });\n};\nvar editProfile = function editProfile(body) {\n  return fetch("".concat(config.baseUrl, "/users/me"), {\n    method: "PATCH",\n    headers: config.headers,\n    body: JSON.stringify(body)\n  }).then(onResponse).catch(function (err) {\n    return console.log(err);\n  });\n};\nvar addCard = function addCard(body) {\n  return fetch("".concat(config.baseUrl, "/cards"), {\n    method: "POST",\n    headers: config.headers,\n    body: JSON.stringify(body)\n  }).then(onResponse).catch(function (err) {\n    return console.log(err);\n  });\n};\nvar deleteCard = function deleteCard(cardId) {\n  return fetch("".concat(config.baseUrl, "/cards/").concat(cardId), {\n    method: "DELETE",\n    headers: config.headers\n  }).then(onResponse).catch(function (err) {\n    return console.log(err);\n  });\n};\nvar addLike = function addLike(cardId) {\n  return fetch("".concat(config.baseUrl, "/cards/likes/").concat(cardId), {\n    method: "PUT",\n    headers: config.headers\n  }).then(onResponse).catch(function (err) {\n    return console.log(err);\n  });\n};\nvar removeLike = function removeLike(cardId) {\n  return fetch("".concat(config.baseUrl, "/cards/likes/").concat(cardId), {\n    method: "DELETE",\n    headers: config.headers\n  }).then(onResponse).catch(function (err) {\n    return console.log(err);\n  });\n};\nvar changeAvatar = function changeAvatar(body) {\n  return fetch("".concat(config.baseUrl, "/users/me/avatar"), {\n    method: "PATCH",\n    headers: config.headers,\n    body: JSON.stringify(body)\n  }).then(onResponse).catch(function (err) {\n    return console.log(err);\n  });\n};\n;// CONCATENATED MODULE: ./src/components/card.js\n\n\nvar cardTemplate = document.querySelector("#card").content.querySelector(".card");\n\n// Create and return new card\nfunction createCard(cardObj, imagePopup, userId) {\n  var name = cardObj.name,\n    url = cardObj.url,\n    likes = cardObj.likes,\n    ownerId = cardObj.ownerId,\n    cardId = cardObj.cardId; //const name = cardObj.name; const url = cardObj.url; ...\n  var cardElement = cardTemplate.cloneNode(true);\n  var cardImageElement = cardElement.querySelector(".card__image");\n  var likeButton = cardElement.querySelector(".card__like-button");\n  var likeCountElement = cardElement.querySelector(".card__like-count");\n  var confirmationPopup = document.querySelector(".confirmation-popup");\n  var submitButton = confirmationPopup.querySelector(".form__submit");\n  var exitButton = confirmationPopup.querySelector(".popup__exit-button");\n  var confirmationPopupObj = {\n    popup: confirmationPopup,\n    exitButton: exitButton\n  };\n  addPopupEventListeners(confirmationPopupObj);\n  cardImageElement.src = url;\n  cardImageElement.alt = "\\u0424\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u044F \\u043C\\u0435\\u0441\\u0442\\u0430 ".concat(name);\n  cardElement.querySelector(".card__title").textContent = name;\n\n  // Check if current user has liked the card already\n  var isLikedByUser = likes.some(function (like) {\n    return like._id === userId;\n  });\n  if (isLikedByUser) {\n    likeButton.classList.add("card__like-button_active");\n  }\n\n  // Set the likes count\n  likeCountElement.textContent = likes.length;\n  likeButton.addEventListener("click", function (evt) {\n    var isLiked = evt.target.classList.contains("card__like-button_active");\n    if (isLiked) {\n      removeLike(cardId).then(function (updatedCard) {\n        evt.target.classList.remove("card__like-button_active");\n        // Update the like count\n        likeCountElement.textContent = updatedCard.likes.length;\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } else {\n      addLike(cardId).then(function (updatedCard) {\n        evt.target.classList.add("card__like-button_active");\n        // Update the like count\n        likeCountElement.textContent = updatedCard.likes.length;\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  });\n  // Check if user and the card owner are the same people\n  var deleteButton = cardElement.querySelector(".card__delete-button");\n  if (ownerId === userId) {\n    deleteButton.style.display = "block";\n    deleteButton.addEventListener("click", function () {\n      openPopup(confirmationPopup);\n    });\n    submitButton.addEventListener("click", function () {\n      deleteCard(cardId);\n      cardElement.remove();\n      closePopup(confirmationPopup);\n    });\n  } else {\n    deleteButton.style.display = "none";\n  }\n  cardImageElement.addEventListener("click", function () {\n    imagePopup.open(url, name);\n  });\n  return cardElement;\n}\n\n;// CONCATENATED MODULE: ./src/index.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n\n\n\n\n\n\nvar cardsContainer = document.querySelector(".cards");\nvar userId;\nfunction adaptCardToCardObj(card) {\n  return _defineProperty({\n    name: card.name,\n    url: card.link,\n    likes: card.likes,\n    ownerId: card.owner._id,\n    cardId: card._id\n  }, "ownerId", card.owner._id);\n}\n\n// Render user\nfunction handleGetUser() {\n  getUser().then(function (userData) {\n    document.querySelector(".profile__occupation").textContent = userData.about;\n    document.querySelector(".profile__name").textContent = userData.name;\n    document.querySelector(".profile__avatar").src = userData.avatar;\n    userId = userData._id;\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\nhandleGetUser();\n\n// Render initial card after page loading\nfunction handleGetInitialCards() {\n  getInitialCards().then(function (cards) {\n    return cards.map(adaptCardToCardObj).map(function (cardObj) {\n      return createCard(cardObj, imagePopup, userId);\n    }).forEach(function (cardElement) {\n      return cardsContainer.append(cardElement);\n    });\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\nhandleGetInitialCards();\nvar formObj = {\n  formSelector: ".form",\n  inputSelector: ".form__input-field",\n  submitButtonSelector: ".form__submit",\n  inactiveButtonClass: "form__submit_inactive",\n  inputErrorClass: "form__input-field_type_error",\n  activeErrorClass: "form__input-error_active"\n};\n\n// Reset form\nfunction resetForm(form, formObj) {\n  form.reset();\n  resetFormErrors(form, formObj);\n}\nfunction createImagePopup() {\n  var popup = document.querySelector(".image-full-screen");\n  var exitButton = popup.querySelector(".popup__exit-button");\n  var img = popup.querySelector(".image-full-screen__image");\n  var figCaption = popup.querySelector(".image-full-screen__figcaption");\n  function openImagePopup(imageSrc, imageName) {\n    img.src = imageSrc;\n    figCaption.textContent = imageName;\n    img.alt = "\\u0424\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u044F \\u043C\\u0435\\u0441\\u0442\\u0430 ".concat(imageName);\n    openPopup(popup);\n  }\n  return {\n    popup: popup,\n    exitButton: exitButton,\n    img: img,\n    figCaption: figCaption,\n    open: openImagePopup\n  };\n}\nfunction handleEditProfile(updatedData) {\n  return editProfile(updatedData).then(function (userData) {\n    document.querySelector(".profile__name").textContent = userData.name;\n    document.querySelector(".profile__occupation").textContent = userData.about;\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\nfunction formLoading(isLoading, btn, defaultTxt) {\n  var loadingTxt = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "Ð¡Ð¾ÑÑÐ°Ð½ÐµÐ½Ð¸Ðµ...";\n  btn.textContent = isLoading ? loadingTxt : defaultTxt;\n}\nfunction createProfileEditPopup() {\n  var popup = document.querySelector(".edit-profile");\n  var openButton = document.querySelector(".profile__edit-button");\n  var name = document.querySelector(".profile__name");\n  var occupation = document.querySelector(".profile__occupation");\n  var exitButton = popup.querySelector(".popup__exit-button");\n  var form = popup.querySelector(".form");\n  var formName = popup.querySelector(".form__input-field_el_name");\n  var formOccupation = popup.querySelector(".form__input-field_el_occupation");\n  var submitButton = popup.querySelector(".form__submit");\n  var defaultSubmitButtonText = submitButton.textContent;\n  openButton.addEventListener("click", function () {\n    formLoading(false, submitButton, defaultSubmitButtonText);\n    resetForm(form, formObj);\n    openPopup(popup);\n    formName.value = name.textContent;\n    formOccupation.value = occupation.textContent;\n    submitButton.disabled = true;\n    submitButton.classList.add("form__submit_inactive");\n  });\n  form.addEventListener("submit", function (e) {\n    formLoading(true, submitButton, defaultSubmitButtonText);\n    e.preventDefault();\n    var name = profileEditPopup.formName.value;\n    var about = profileEditPopup.formOccupation.value;\n    handleEditProfile({\n      name: name,\n      about: about\n    });\n    closePopup(popup);\n  });\n  return {\n    openButton: openButton,\n    name: name,\n    occupation: occupation,\n    popup: popup,\n    exitButton: exitButton,\n    form: form,\n    formName: formName,\n    formOccupation: formOccupation,\n    submitButton: submitButton\n  };\n}\nfunction handleAddCard(cardObj) {\n  addCard(cardObj).then(function (card) {\n    var cardElement = createCard(adaptCardToCardObj(card, userId), imagePopup, userId);\n    cardsContainer.prepend(cardElement);\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\nfunction createAddCardPopup() {\n  var addButton = document.querySelector(".profile__add-button");\n  var popup = document.querySelector(".add-place");\n  var exitButton = popup.querySelector(".popup__exit-button");\n  var form = popup.querySelector(".form");\n  var name = popup.querySelector(".form__input-field_el_title");\n  var url = popup.querySelector(".form__input-field_el_url");\n  var submitButton = popup.querySelector(".form__submit");\n  var defaultSubmitButtonText = submitButton.textContent;\n  addButton.addEventListener("click", function () {\n    formLoading(false, submitButton, defaultSubmitButtonText);\n    resetForm(form, formObj);\n    submitButton.disabled = true;\n    submitButton.classList.add("form__submit_inactive");\n    openPopup(popup);\n  });\n  form.addEventListener("submit", function (e) {\n    formLoading(true, submitButton, defaultSubmitButtonText);\n    e.preventDefault();\n    var cardObj = {\n      name: name.value,\n      link: url.value\n    };\n    handleAddCard(cardObj);\n    closePopup(popup);\n  });\n  return {\n    addButton: addButton,\n    popup: popup,\n    exitButton: exitButton,\n    form: form,\n    name: name,\n    url: url,\n    submitButton: submitButton\n  };\n}\nfunction createAvatarPopup() {\n  var container = document.querySelector(".profile__edit-avatar-container");\n  var img = container.querySelector(".profile__avatar");\n  var pencilButton = document.querySelector(".profile__pencil");\n  var overlay = container.querySelector(".profile__overlay");\n  var popup = document.querySelector(".edit-avatar");\n  var form = popup.querySelector(".form");\n  var url = popup.querySelector(".form__input-field_el_avatar");\n  var exitButton = popup.querySelector(".popup__exit-button");\n  var submitButton = popup.querySelector(".form__submit");\n  var defaultSubmitButtonText = submitButton.textContent;\n  pencilButton.addEventListener("click", function () {\n    formLoading(false, submitButton, defaultSubmitButtonText);\n    resetForm(form, formObj);\n    url.value = img.src;\n    submitButton.disabled = true;\n    submitButton.classList.add("form__submit_inactive");\n    openPopup(popup);\n  });\n\n  // Change background AND show overlay on hover over avatar\n  container.addEventListener("mouseover", function () {\n    pencilButton.style.opacity = "1";\n    overlay.style.backgroundColor = "rgba(0, 0, 0, .8)";\n  });\n  container.addEventListener("mouseout", function () {\n    pencilButton.style.opacity = "0";\n    overlay.style.backgroundColor = "initial";\n  });\n  form.addEventListener("submit", function (e) {\n    formLoading(true, submitButton, defaultSubmitButtonText);\n    e.preventDefault();\n    changeAvatar({\n      avatar: url.value\n    });\n    img.src = url.value;\n    closePopup(popup);\n  });\n  return {\n    container: container,\n    img: img,\n    pencilButton: pencilButton,\n    overlay: overlay,\n    popup: popup,\n    form: form,\n    url: url,\n    exitButton: exitButton,\n    submitButton: submitButton\n  };\n}\nvar avatarPopup = createAvatarPopup();\nvar profileEditPopup = createProfileEditPopup();\nvar imagePopup = createImagePopup();\nvar cardAddPopup = createAddCardPopup(cardsContainer, imagePopup);\n\n// Close popup if\n// "X" icon is clicked\n// OR click outside of popup\naddPopupEventListeners(profileEditPopup);\naddPopupEventListeners(cardAddPopup);\naddPopupEventListeners(imagePopup);\naddPopupEventListeners(avatarPopup);\n\n// Validate forms\nenableValidation(formObj);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///361\n')}},__webpack_exports__={};__webpack_modules__[361]()})();